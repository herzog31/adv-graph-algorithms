{ 
  "name": "de",
  "fields" : {
    "algorithm_btn_prev": "Zurück",
    "algorithm_btn_next": "Nächster Schritt",
    "algorithm_btn_frwd": "Vorspulen",
    "algorithm_btn_paus": "Pause",
    "algorithm_msg_finish": "Was nun?",
    "algorithm_msg_test": "Forschungsaufgaben ausprobieren:",
    "algorithm_btn_more": "Beschreibung des Algorithmus lesen",
    "algorithm_btn_exe1": "Wie würde der Algorithmus entscheiden?",
    "algorithm_btn_exe2": "Augmentationswege und Gleichheitsgraphen",
    "algorithm_new_graph_found": "Neuer Gleichheitsgraph wurde bestimmt.",
    "algorithm_labels_updated": "Die Knotenmarkierungen wurden nach folgender Formel aktualisiert:",
    "algorithm_formula": "\\(\\begin{equation}l^\\prime(v) =\\begin{cases}l(v) - \\Delta & v \\in S\\\\l(v) + \\Delta & v \\in T\\\\l(v) & sonst\\end{cases}\\end{equation}\\)",
    "algorithm_new_graph_marked": "Der neue Gleichheitsgraph wurde laut den neuen Knotenmarkierungen vom Algorithmus bestimmt (<strong style='font-weight: bold; color: green;'>grün</strong> und <strong>schwarz</strong>).",
    "algorithm_find_new_eq_graph": "Neuen Gleichheitsgraph bestimmen",
    "algorithm_actualise_labels": "Zur Bestimmung eines neuen Gleichheitsgraph muss der Algorithmus zunächst die Knotenmarkierungen aktualisieren. Die neuen Knotenmarkierungen definieren dann neuen Gleichheitsgraph, wo das aktuelle Matching drin bleibt und mindestens eine neue Kante außerhalb des alten Gleichheitsgraphs hinzugefügt wird.",
    "algorithm_delta_calculated": "Dazu wird ein \\(\\Delta\\) wie folgt bestimmt:",
    "algorithm_delta_equals": "\\(\\Delta = \\min\\limits_{s \\in S\\ \\wedge\\ y \\in Y \\setminus T}\\{l(s) + l(y) - w(s,y)\\} = ",
    "algorithm_idea_delta": "Die Idee der Berechnung von \\(\\Delta\\) ist die folgende: für jede Kante, die die Knoten aus der Menge <strong>S</strong> in oberer Partition und die Knoten außerhalb der Menge <strong>T</strong> in unterer Partition verbindet, berechne \\(\\Delta\\) als die Summe der Markierungen von Nachbarknoten minus das Gewicht der Kante. Der minimale Wert von allen solchen \\(\\Delta\\) wird gespeichert.",
    "algorithm_this_formula": "Die Knotenmarkierungen werden dann nach folgender Formel aktualisiert:",
    "algorithm_optimal_matching": "Optimales Matching",
    "algorithm_max_matching": "Die Ungarische Methode hat erfolgreich ein maximales Matching bestimmt.",
    "algorithm_total_weight": "Das Gesamtgewicht beträgt ",
    "algorithm_hungarian_method": "Die Ungarische Methode",
    "algorithm_click_next": "Klicke auf <strong>Nächster Schritt</strong>, um den Algorithmus zu starten.",
    "algorithm_augmenting_path": "Augmentationsweg bestimmen",
    "algorithm_construct_path": "Der Algorithmus versucht nun schrittweise einen alternierenden Pfad zu konstruieren.",
    "algorithm_ST_sets": "Zur Konstruktion des alternierenden Pfades verwendet der Algorithmus <strong>S</strong> und <strong>T</strong> Knotenmengen um die Information über die bisher genutze Knoten zu speichern, damit die Knoten nicht zweimal vewendet werden. <strong>S</strong> enthält die Knoten aus der oberen Partition, <strong>T</strong> enthält die Knoten aus der unteren Partition.",
    "algorithm_construction_stops": "Die Konstruktion stoppt, wenn der alternierende Pfad augmentierend wird oder es keine weiteren passenden Kanten mehr gibt.",
    "algorithm_find_eq_graph": "Gleichheitsgraph bestimmen",
    "algorithm_equality_graph_definition": "Der Gleichheitsgraph heißt ein Graph, wo jedes Kantengewicht gleich der Summe von Markierungen beider Nachbarknoten ist.",
    "algorithm_construct_eq_graph": "Um den Gleichheitsgraph zu bestimmen muss der Algorithmus die maximale Nachbarkante jedes Knoten finden und deren Gewicht als Markierung dem Knoten zuweisen.",
    "algorithm_labels_to_graph": "Anhand der Knotenmarkierungen wird der Gleichheitsgraph ermittelt (<strong>schwarz</strong>).",
    "algorithm_need_augmenting_path": "Um das Matching zu erweitern muss der Algorithmus den Augmentationsweg bestimmen.",
    "algorithm_definitions": "Um den Begriff 'Augmentationsweg' zu verstehen, muss man wissen, was ein alternierender Pfad bedeutet. Der Pfad heißt alternierend, falls dieser abwechselnd Kanten aus der Matching <strong>M</strong> und aus der Menge <strong>V/M</strong> (nicht <strong>M</strong>) enthält. Der Augmentationsweg heißt ein alternierender Weg im Gleichheitsgraph, der außerhalb des aktuellen Matchings anfängt und endet.",
    "algorithm_find_root": "Wurzel eines alternierenden Pfades finden",
    "algorithm_chooses_root": "Der Algorithmus wählt als Wurzel einen Knoten, der noch nicht im Matching vorhanden ist und markiert ihn ",
    "algorithm_cannot_find_augmenting_path": "Der Algorithmus konnte keinen Augmentationsweg mit der gewählten Wurzel ",
    "algorithm_in_current_graph": " im aktuellen Gleichheitsgraph finden.",
    "algorithm_augmenting_path_found": "Es wurde ein Augmentationsweg (<span style='font-weight: bold; color: red;'>rot</span>) gefunden.",
    "algorithm_increase_matching": "Matching vergrößern",
    "algorithm_matching_can_be_increased": "Nachdem der Augmentationsweg <strong>P</strong> gefunden ist, kann das Matching <strong>M</strong> vergrößert werden. Die Kanten <strong>E∈M</strong> aus dem Augmentationsweg <strong>P</strong> werden aus dem Matching rausgenommen und die Kanten <strong>E∈P/M</strong> werden dem Matching hinzugefügt.",
    "algorithm_path_to_matching": "Mittels des gefundenen Augmentationsweges konnte das Matching (<span style='font-weight: bold; color: green;'>grün</span>) ergänzt werden.",

    "aufgabe1_btn_next_question": "Zur nächsten Frage vorspulen",
    "aufgabe1_btn_retry": "Nochmal versuchen",
    "aufgabe1_btn_exe2": "Probiere die zweite Forschungaufgabe:",

    "aufgabe1_question": "Frage",
    "aufgabe1_answer": "Antwort",
    "aufgabe1_results": "Ergebnisse",
    "aufgabe1_results_correct": "Korrekt",
    "aufgabe1_results_wrong": "Falsch",
    "aufgabe1_close": "Schließen",
    "aufgabe1_vanswer": "Antworten",
    "aufgabe1_next": "Weiter",
    "aufgabe1_initial_h": "Initiale Markierungen",
    "aufgabe1_initial_t1": "Der Algorithmus bestimmt zuerst eine initiale Markierung für jeden Knoten.",
    "aufgabe1_equal_h": "Gleichheitsgraph",
    "aufgabe1_equal_t1": "Mittels der Markierungen kann der Gleichheitsgraph (<strong>schwarz</strong>) bestimmt werden.",
    "aufgabe1_augment_h": "Augmentationsweg bestimmen",
    "aufgabe1_augment_t1": "Wurzel eines alternierenden Pfades finden",
    "aufgabe1_augment_t2": "Der Algorithmus wählt als Wurzel einen Knoten, der noch nicht im Matching vorhanden ist und markiert ihn ",
    "aufgabe1_augment_t3": "hell grün",
    "aufgabe1_augment_t4": "Der Algorithmus versucht nun schrittweise einen alternierenden Pfad zu konstruieren.",
    "aufgabe1_augment_t5": "Die Konstruktion stoppt, wenn der alternierende Pfad augmentierend wird oder es keine weiteren passenden Kanten mehr gibt.",
    "aufgabe1_augment_t6": "Der Algorithmus konnte keinen Augmentationsweg mit der gewählten Wurzel (",
    "aufgabe1_augment_t7": "hell grün",
    "aufgabe1_augment_t8": ") im aktuellen Gleichheitsgraph finden.",
    "aufgabe1_label_h": "Markierungen verbessern",
    "aufgabe1_label_t1": "Zur Bestimmung eines neuen Gleichheitsgraph muss der Algorithmus zunächst die Markierungen verbessern.",
    "aufgabe1_label_t2": "Dazu wird ein \\(\\Delta\\) wie folgt bestimmt:",
    "aufgabe1_label_t3": "\\(\\Delta = \\min\\limits_{s \\in S\\ \\wedge\\ y \\in Y \\setminus T}\\{l(s) + l(y) - w(s,y)\\} = ",
    "aufgabe1_label_t4": "\\)",
    "aufgabe1_label_t5": "Die Markierungen werden dann nach folgender Formel aktualisiert:",
    "aufgabe1_label_t6": "\\(\\begin{equation}l^\\prime(v) =\\begin{cases}l(v) - ",
    "aufgabe1_label_t7": " & v \\in S\\\\l(v) + ",
    "aufgabe1_label_t8": " & v \\in T\\\\l(v) & sonst\\end{cases}\\end{equation}\\)",
    "aufgabe1_equal_t2": "Mittels der verbesserten Markierungen kann der Gleichheitsgraph (<strong>schwarz</strong>) erweitert werden.",
    "aufgabe1_augment_t9": "Es wurde ein Augmentationsweg (<span style='font-weight: bold; color: red;'>rot</span>) gefunden.",
    "aufgabe1_matchinc_h": "Matching vergrößern",
    "aufgabe1_matchinc_t1": "Mittels des gefundenen Augmentationsweges konnte das Matching (<span style='font-weight: bold; color: green;'>grün</span>) ergänzt werden.",
    "aufgabe1_matchchk_h": "Auf perfektes Matching prüfen",
    "aufgabe1_matchchk_t1": "Der Algorithmus prüft nun das erweiterte Matching. Es ist vollständig und damit perfekt.",
    "aufgabe1_matchchk_t2": "Der Algorithmus prüft nun das erweiterte Matching. Es ist noch nicht vollständig.",
    "aufgabe1_result_h": "Optimales Matching",
    "aufgabe1_result_t1": "Die Ungarische Methode hat erfolgreich ein maximales Matching bestimmt.",
    "aufgabe1_result_t2": "Das Gesamtgewicht beträgt <strong>",
    "aufgabe1_result_t3": "</strong>.",
    "aufgabe1_qresult_1": "Von ",
    "aufgabe1_qresult_2": " Fragen hast du ",
    "aufgabe1_qresult_3": " korrekt beantwortet.",
    "aufgabe1_correctanswer": "Korrekte Antwort:",
    "aufgabe1_currentstep": "Im aktuellen Schritt:",
    "aufgabe1_qns_1": "Welchen Schritt macht der Algorithmus als nächstes?",
    "aufgabe1_qd_1": "Im aktuellen Schritt wird der Algorithmus die Markierungen verbessern. Dazu benötigt er ein \\(\\Delta\\), welches sich nach folgender Formel berechnet:",
    "aufgabe1_qd_2": "\\(\\Delta = \\min\\limits_{s \\in S\\ \\wedge\\ y \\in Y \\setminus T}\\{l(s) + l(y) - w(s,y)\\}\\)",
    "aufgabe1_qd_3": "\\(S = \\{",
    "aufgabe1_qd_4": "\\},\\ T = \\{",
    "aufgabe1_qd_5": "\\}\\)",
    "aufgabe1_qd_6": "Welchen Wert für \\(\\Delta\\) wird der Algorithmus ermitteln?",
    "aufgabe1_qnl_1": "Im aktuellen Schritt wird der Algorithmus die Markierungen verbessern. Dazu wurde bereits \\(\\Delta = ",
    "aufgabe1_qnl_2": "\\) bestimmt.",
    "aufgabe1_qnl_3": "\\(S = \\{",
    "aufgabe1_qnl_4": "\\},\\ T = \\{",
    "aufgabe1_qnl_5": "\\}\\)",
    "aufgabe1_qnl_6": "Bitte berechne neue Markierungen nach der bekannten Formel für folgende Knoten:",
    "aufgabe1_qeg_1": "Im aktuellen Schritt wird der Algorithmus einen neuen Gleichheitsgraph bestimmen. Bitte markiere alle Kanten des neuen Gleichheitsgraphs.",
    "aufgabe1_qsl_1": "Im ersten Schritt bestimmt der Algorithmus die initialen Markierungen.",
    "aufgabe1_qsl_2": "Bitte berechne die initiale Markierung für den Knoten ",
    "aufgabe1_status0": "Den Graph vervollständigen.",
    "aufgabe1_status1": "Initiale Markierungen bestimmen.",
    "aufgabe1_status2": "Den initialen Gleichheitsgraph bestimmen.",
    "aufgabe1_status3": "Der Algorithmus muss einen neuen Wurzelknoten für einen alternierenden Pfad bestimmen.",
    "aufgabe1_status4": "Einen neuen alternierenden Pfad konstruieren.",
    "aufgabe1_status5": "Es existiert kein augmentierender Pfad im Gleichheitsgraph.",
    "aufgabe1_status6": "Markierungen verbessern.",
    "aufgabe1_status7": "Gleichheitsgraph mittels neuer Markierungen verbessern.",
    "aufgabe1_status8": "Es existiert ein augmentierender Pfad im Gleichheitsgraph.",
    "aufgabe1_status9": "Matching verbessern.",
    "aufgabe1_status10": "Auf ein perfektes Matching prüfen.",
    "aufgabe1_status11": "Das Matching ist perfekt. Der Algorithmus kann das optimales Matching ausgeben.",
    "aufgabe1_statuspast0": "Der Graph wurde vervollständigt.",
    "aufgabe1_statuspast1": "Die initialen Markierungen wurden bestimmt.",
    "aufgabe1_statuspast2": "Der initiale Gleichheitsgraph wurde bestimmt",
    "aufgabe1_statuspast3": "Eine Wurzel für einen alternierenden Pfad wurde bestimmt.",
    "aufgabe1_statuspast4": "Es wurde versucht einen alternierenden Pfad zu konstruieren.",
    "aufgabe1_statuspast5": "Es konnte kein augmentierender Pfad gefunden werden.",
    "aufgabe1_statuspast6": "Die Markierungen wurden verbessert.",
    "aufgabe1_statuspast7": "Der Gleichheitsgraph wurde mittels neuer Markierungen verbessert.",
    "aufgabe1_statuspast8": "Es wurde ein augmentierender Pfad gefunden.",
    "aufgabe1_statuspast9": "Das Matching wurde verbessert.",
    "aufgabe1_statuspast10": "Das Algorithmus hat das aktuelle Matching auf Vollständigkeit (perfekt) geprüft.",
    "aufgabe1_statuspast11": "Das optimale Matching wurde gezeigt.",

    "aufgabe2_optimal_matching": "Optimales Matching",
    "aufgabe2_matching_found": "Die Ungarische Methode hat erfolgreich ein maximales Matching bestimmt.",
    "aufgabe2_total_weight": "Das Gesamtgewicht beträgt",
    "aufgabe2_another_task": "Andere Forschungsaufgabe ausprobieren:",
    "aufgabe2_hungarian_method": "Die Ungarische Methode",
    "aufgabe2_click_next": "Klicke auf <strong>Nächster Schritt</strong>, um den Algorithmus zu starten.",
    "aufgabe2_find_new_equality_graph": "Neuen Gleichheitsgraph bestimmen",
    "aufgabe2_must_find_labels": "Zur Bestimmung eines neuen Gleichheitsgraph muss der Algorithmus zunächst die Markierungen aktualisieren.",
    "aufgabe2_delta_set": "Dazu wird ein \\(\\Delta\\) wie folgt bestimmt:",
    "aufgabe2_min_delta": "\\(\\Delta = \\min\\limits_{s \\in S\\ \\wedge\\ y \\in Y \\setminus T}\\{l(s) + l(y) - w(s,y)\\}",
    "aufgabe2_labels_actualised": "Die Markierungen werden dann nach folgender Formel aktualisiert:",
    "aufgabe2_label_update_formula1": "\\(\\begin{equation}l^\\prime(v) =\\begin{cases}l(v) - ",
    "aufgabe2_label_update_formula2": " & v \\in S\\\\l(v) + ",
    "aufgabe2_label_update_formula3": " & v \\in T\\\\l(v) & sonst\\end{cases}\\end{equation}\\)",
    "aufgabe2_new_graph_marked": "Der neue Gleichheitsgraph wurde vom Algorithmus markiert (<strong style='font-weight: bold; color: green;'>grün</strong> und <strong>schwarz</strong>).",
    "aufgabe2_find_augmenting_path": "Augmentationsweg bestimmen",
    "aufgabe2_build_alt_path": "Der Algorithmus versucht nun schrittweise einen alternierenden Pfad zu konstruieren.",
    "aufgabe2_build_stops": "Die Konstruktion stoppt, wenn der alternierende Pfad augmentierend wird oder es keine weiteren passenden Kanten mehr gibt.",
    "aufgabe2_find_root": "Wurzel eines alternierenden Pfades finden",
    "aufgabe2_choose_root": "Der Algorithmus wählt als Wurzel einen Knoten, der noch nicht im Matching vorhanden ist und markiert ihn ",
    "aufgabe2_light_green": "hell grün",
    "aufgabe2_cannot_find": "Der Algorithmus konnte keinen Augmentationsweg mit der gewählten Wurzel",
    "aufgabe2_in_graph": "im aktuellen Gleichheitsgraph finden.",
    "aufgabe2_found_augmenting_path": "Es wurde ein Augmentationsweg (<span style='font-weight: bold; color: red;'>rot</span>) gefunden.",
    "aufgabe2_increase_matching": "Matching vergrößern",
    "aufgabe2_augment_matching": "Mittels des gefundenen Augmentationsweges konnte das Matching (<span style='font-weight: bold; color: green;'>grün</span>) ergänzt werden.",
    "aufgabe2_find_equality_graph": "Gleichheitsgraph bestimmen",
    "aufgabe2_initial_labels": "Der Algorithmus bestimmt zuerst eine initiale Markierung für jeden Knoten.",
    "aufgabe2_found_equality_graph": "Anhand der Markierungen wird der Gleichheitsgraph ermittelt (<strong>schwarz</strong>)."
  }
}
